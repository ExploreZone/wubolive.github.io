{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"John Doe","url":"http://blog.wubolive.com"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2018-11-30T09:49:48.963Z","updated":"2018-11-30T09:49:48.950Z","comments":false,"path":"/404.html","permalink":"http://blog.wubolive.com//404.html","excerpt":"","text":""},{"title":"关于","date":"2018-11-30T09:49:49.464Z","updated":"2018-11-30T09:49:48.955Z","comments":false,"path":"about/index.html","permalink":"http://blog.wubolive.com/about/index.html","excerpt":"","text":"一个来自南方的北漂少年 · 阿波Linux | 云计算 | DevOps | 数据库 | Python | 大数据 本人比较喜欢使用Markdown语法写文章，所以之前用Hexo驱动在github.com中搭建了一个博客http://blog.wubolive.com，但因为管理不灵活而将博客迁移到Leanote 新浪微博：@那繁华之处"},{"title":"友情链接","date":"2018-11-30T09:49:48.963Z","updated":"2018-11-30T09:49:48.962Z","comments":true,"path":"links/index.html","permalink":"http://blog.wubolive.com/links/index.html","excerpt":"","text":""},{"title":"分类","date":"2018-11-30T09:49:49.489Z","updated":"2018-11-30T09:49:48.960Z","comments":false,"path":"categories/index.html","permalink":"http://blog.wubolive.com/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-11-30T09:49:49.521Z","updated":"2018-11-30T09:49:48.965Z","comments":false,"path":"tags/index.html","permalink":"http://blog.wubolive.com/tags/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2018-11-30T09:49:48.964Z","updated":"2018-11-30T09:49:48.964Z","comments":false,"path":"repository/index.html","permalink":"http://blog.wubolive.com/repository/index.html","excerpt":"","text":""},{"title":"书单","date":"2018-11-30T09:49:48.958Z","updated":"2018-11-30T09:49:48.958Z","comments":false,"path":"books/index.html","permalink":"http://blog.wubolive.com/books/index.html","excerpt":"","text":""}],"posts":[{"title":"Linux已虚拟用户方式安装Vsftpd","slug":"Linux-install-vsftpd","date":"2018-11-30T06:36:28.000Z","updated":"2018-11-30T06:43:43.188Z","comments":true,"path":"2018/11/30/Linux-install-vsftpd/","link":"","permalink":"http://blog.wubolive.com/2018/11/30/Linux-install-vsftpd/","excerpt":"","text":"说明： vsftpd的版本：vsftpd-3.0.2-22.el7.x86_64ftp 根目录 : /data/ftpftp 配置文件目录：/etc/vsftpdftp 虚拟用户权限配置文件目录：/etc/vsftpd/vuser_config 实现目标： 匿名用户可以登录，但是不能访问虚拟用户的宿主目录，只能访问共享目录 虚拟用户对自己的宿主目录有任何权限，且只能在自己宿主目录中操作 搭建过程1.安装vsftpd，ftp和libdb-utils(需要安装db包，用来加密虚拟用户的账户信息,centos7默认安装好了)1[root@CentOS ~]# yum install vsftpd ftp -y 2.创建本地用户[用于映射虚拟用户]1234567#建立ftp用户目录[root@CentOS ~]# mkdir -p /ftp-dir#创建用户[root@CentOS ~]# useradd -d /ftp-dir/ vftpuser -s /sbin/nologin #更改权限和主组权限[root@CentOS ~]# chmod 755 /ftp-dir[root@CentOS ~]# chown vftpuser.root /ftp-dir 3.创建虚拟用户[用户和密码]文件12345[root@CentOS ~]# vim /etc/vsftpd/vuseradmin [用户名]123456 [密码]devops [用户名]123456 [密码] 4.加密用户密码文件生成数据库文件123[root@CentOS ~]# cd /etc/vsftpd/[root@CentOS ~]# db_load -T -t hash -f ./vuser ./login.db[root@CentOS ~]# chmod 600 login.db 5.创建PAM认证文件1234[root@CentOS ~]# vim /etc/pam.d/vsftpd.vuauth required /lib64/security/pam_userdb.so db=/etc/vsftpd/login #注意64位系统写/lib64这个路径，32位系统要写成/lib，下同！account required /lib64/security/pam_userdb.so db=/etc/vsftpd/login 6.修改配置文件1234567891011121314151617181920212223242526272829303132[root@CentOS ~]# vi /etc/vsftpd/vsftpd.conf#允许匿名用户访问anonymous_enable=yeslocal_enable=YESwrite_enable=YESlocal_umask=022dirmessage_enable=YESxferlog_enable=YESconnect_from_port_20=YESxferlog_file=/var/log/xferlogxferlog_std_format=YESlisten=NOlisten_ipv6=YES#修改ftp默认目录到/ftp-dir下面chroot_local_user=YESlocal_root=/ftp-diranon_root=/ftp-dir#pam认证文件pam_service_name=vsftpd.vu#虚拟用户权限配置目录user_config_dir=/etc/vsftpd/ftploginuserlist_enable=YEStcp_wrappers=YESallow_writeable_chroot=YESone_process_model=NO#开启虚拟用户guest_enable=YESguest_username=vftpuser 注意，如果vsftpd的版本是：vsftpd-2.2.2-24.el6.x86_64那么vsftpd.conf的配置文件修改如下,其他操作一样，不然的话2.2.2版本启动时会遇到各种问题：123456789101112131415161718listen=YESlocal_enable=YESanon_umask=022anonymous_enable=YESpam_service_name=vsftpd.vuuserlist_enable=YESchroot_local_user=YESlocal_root=/ftp-diranon_root=/ftp-dirguest_enable=YESguest_username=vftpuseruser_config_dir=/etc/vsftpd/ftploginuserlist_enable=YESxferlog_enable=YESxferlog_std_format=YESxferlog_file=/var/log/xferlogdual_log_enable=YESvsftpd_log_file=/var/log/vsftpd.log 7.重启vsftpd服务1[root@CentOS ~]# systemctl restart vsftpd 8.创建虚拟用户[权限]配置文件123456789101112131415[root@CentOS ~]# mkdir /etc/vsftpd/ftplogin[root@CentOS ~]# cd /etc/vsftpd/ftplogin[root@CentOS ~]# vi abc [有所有权限]#设置登录后禁锢的目录local_root=/ftp-dir/admin#开放写权限write_enable=yes#开放下载权限anon_world_readable_only=no#开放上传权限anon_upload_enable=yes#开放创建目录的权限anon_mkdir_write_enable=yes#开放删除和重命名的权限anon_other_write_enable=yes 1234# vi bcd [只有上传下载的权限]local_root=/ftp-dir/devopsanon_upload_enable=yesanon_world_readable_only=no 9.更改虚拟用户目录权限1234#如果不更改的话，匿名用户是可以访问到的[root@CentOS ~]# mkdir /ftp-dir/admin &amp;&amp; chmod 700 /ftp-dir/admin[root@CentOS ~]# mkdir /ftp-dir/devops &amp;&amp; chmod 700 /ftp-dir/devops[root@CentOS ~]# chown -R vftpuser.root /ftp-dir 10.测试访问。1234567891011[root@CentOS ~]# ftp 127.0.0.1Connected to 127.0.0.1 (127.0.0.1).220 (vsFTPd 3.0.2)Name (127.0.0.1:root): devops331 Please specify the password.Password:230 Login successful.Remote system type is UNIX.Using binary mode to transfer files.ftp&gt; exit221 Goodbye. 11.添加用户(不需要重启vsftpd服务)1234567891011121314#添加新用户test，密码为abcd[root@CentOS ~]# vim /etc/vsftpd/vuseradmin123456devops123456user1123456#创建test用户对应的目录并授权[root@CentOS ~]# mkdir /ftp-dir/user1 &amp;&amp; chown vuser:root /ftp-dir/user1#重新生成加密的db文件[root@CentOS ~]# cd /etc/vsftpd[root@CentOS ~]# db_load -T -t hash -f ./vuser ./login.db#删除用户就是把添加用户的操作撤销，然后删除加密的db文件重新生成即可。 12.测试访问，此时添加的test用户的/ftp-dir/test目录的权限是755，匿名用户可以登录。若要屏蔽，修改权限为700即可。1[root@CentOS ~]# ftp 127.0.0.1 13.错误处理 错误1：226 Transfer done (but failed to open directory) 解决：selinux 和防火墙导致 错误2：500 OOPS: vsftpd: refusing to run with writable root inside chroot() 解决：配置文件中加入 allow_writeable_chroot=YES 针对标准vsftpd(standonly)模式，然后重启ftp.vsftp上传文件权限问题file_open_mode上传档案的权限，与chmod 所使用的数值相同。如果希望上传的文件可以执行，设此值为0777。默认情况下vsftp上传之后文件的权限是600，目录权限是700 local_umask=xxx这是指定本地用户上传后的文件权限设置 anon_umask=xxx这是指定虚拟用户上传后的文件权限设置 umask是unix操作系统的概念，umask决定目录和文件被创建时得到的初始权限 umask = 022时，新建的目录 权限是755，文件的权限是 644 umask = 077时，新建的目录 权限是700，文件的权限时 600","categories":[],"tags":[{"name":"Ftp","slug":"Ftp","permalink":"http://blog.wubolive.com/tags/Ftp/"}]},{"title":"Ansible Ad-Hoc命令集","slug":"ansible-hoc","date":"2018-11-30T06:13:28.000Z","updated":"2018-11-30T06:21:26.246Z","comments":true,"path":"2018/11/30/ansible-hoc/","link":"","permalink":"http://blog.wubolive.com/2018/11/30/ansible-hoc/","excerpt":"","text":"ansible命令使用方法123456789101112131415161718192021222324ansible &lt;host-pattern&gt; [options]可用选项如下。 -v,--verbose:输出更详细的执行过程信息,-vvv可得到执行过程所有信息。 -i PATH,--inventory=PATH:指定inventory信息,默认/etc/absible/hosts。 -f NUM,--forks=NUM:并发线程数,默认5个线程。 --private-key=PRIVATE_KEY_FILE:指定密钥文件。 -m NAME,--module-name=NAME:指定执行使用的模块。 -M DIRECTORY,--module-path=DIRECTORY:指定模块存放路径,默认/usr/share/ansible,也可以通过ANSIBLE_LIBRARY设定默认路径。 -a &apos;ARGUMENTS&apos;,--args=&apos;ARGUMENTS&apos;:模块参数。 -k,--ask-pass SSH:认证密码。 -K,--ask-sudo-pass sudo:用户的密码(--sudo时使用)。 -o,--one-line:标准输出至一行。 -s,--sudo:相当于Linux系统下的sudo命令。 -t DIRECTORY,--tree=DIRECTORY:输出信息至DIRECTORY目录下,结果文件以远程主机名命名。 -T SECONDS,--timeout=SECONDS:指定连接远程主机的最大超时,单位是秒。 -B NUM,--background=NUM:后台执行命令,超NUM秒后中止正在执行的任务。 -P NUM,--poll=NUM:定期返回后台任务进度。 -u USERNAME,--user=USERNAME:指定远程主机以USERNAME运行命令。 -U SUDO_USERNAME,--sudo-user=SUDO_USERNAME:使用sudo,相当于Linux下的sudo命令。 -c CONNECTION,--connection=CONNECTION:指定连接方式,可用选项paramiko(SSH)、ssh、local,local方式常 用于crontab和kickstarts。 -l SUBSET,--limit=SUBSET:指定运行主机。 -l ~REGEX,--limit=~REGEX:指定运行主机(正则)。 --list-hosts:列出符合条件的主机列表,不执行任何命令。 情景1:检查all组所有主机是否存活12345678910111213[root@Ansible ~]# ansible all -f 5 -m ping36.103.245.138 | SUCCESS =&gt; &#123; &quot;changed&quot;: false, &quot;ping&quot;: &quot;pong&quot;&#125;36.103.245.70 | SUCCESS =&gt; &#123; &quot;changed&quot;: false, &quot;ping&quot;: &quot;pong&quot;&#125;36.103.245.135 | SUCCESS =&gt; &#123; &quot;changed&quot;: false, &quot;ping&quot;: &quot;pong&quot;&#125; 情景2:返回all组所有主机的hostname123456789[root@Ansible ~]# ansible all -s -m command -a &apos;hostname&apos; 36.103.245.138 | SUCCESS | rc=0 &gt;&gt;node136.103.245.70 | SUCCESS | rc=0 &gt;&gt;node236.103.245.135 | SUCCESS | rc=0 &gt;&gt;master 流程图 情景3：列出all组所有主机列表12345[root@Ansible ~]# ansible all --list hosts (3): 36.103.245.135 36.103.245.138 36.103.245.70 情景4：列出all组所有主机磁盘使用情况1234567891011121314151617181920212223[root@Ansible ~]# ansible all -a &apos;df -lh&apos;36.103.245.138 | SUCCESS | rc=0 &gt;&gt;Filesystem Size Used Avail Use% Mounted ondevtmpfs 7.9G 0 7.9G 0% /devtmpfs 7.9G 0 7.9G 0% /dev/shmtmpfs 7.9G 57M 7.8G 1% /run/dev/vda2 36G 2.8G 31G 9% /36.103.245.70 | SUCCESS | rc=0 &gt;&gt;Filesystem Size Used Avail Use% Mounted ondevtmpfs 7.9G 0 7.9G 0% /devtmpfs 7.9G 0 7.9G 0% /dev/shmtmpfs 7.9G 57M 7.8G 1% /run/dev/vda2 36G 2.8G 31G 9% //dev/vdb1 99G 61M 94G 1% /home36.103.245.135 | SUCCESS | rc=0 &gt;&gt;Filesystem Size Used Avail Use% Mounted ondevtmpfs 7.9G 0 7.9G 0% /devtmpfs 7.9G 0 7.9G 0% /dev/shmtmpfs 7.9G 185M 7.7G 3% /run/dev/vda2 36G 25G 9.4G 72% //dev/vdb1 99G 61M 94G 1% /home 情景5：列出all组所有主机内存使用情况123456789101112131415[root@Ansible ~]# ansible all -m shell -a &quot;free -h&quot;36.103.245.138 | SUCCESS | rc=0 &gt;&gt; total used free shared buff/cache availableMem: 15G 384M 13G 56M 1.4G 14GSwap: 0B 0B 0B36.103.245.70 | SUCCESS | rc=0 &gt;&gt; total used free shared buff/cache availableMem: 15G 377M 13G 56M 1.3G 14GSwap: 0B 0B 0B36.103.245.135 | SUCCESS | rc=0 &gt;&gt; total used free shared buff/cache availableMem: 15G 839M 11G 184M 3.1G 14GSwap: 0B 0B 0B ansible-doc命令使用方法123456789ansible-doc [options] [module...]可用选项如下。 --version:显示工具版本号 -h,--help:显示该help说明 -M MODULE_PATH,--module-path=MODULE_PATH:指定Ansible模块的默认加载目录。 -l,--list:列出所有可用的模块。 -s,--snippet:只显示playbook说明的代码段。 -v:显示工具版本号。 【示例1】安装redhat-lsb并查看服务器系统版本号。步骤1：安装redhat-lsb123456789101112131415161718192021222324[root@Ansible ~]# ansible all -m yum -a &quot;name=redhat-lsb state=present&quot;36.103.245.138 | SUCCESS =&gt; &#123; &quot;changed&quot;: false, &quot;msg&quot;: &quot;&quot;, &quot;rc&quot;: 0, &quot;results&quot;: [ &quot;redhat-lsb-4.1-27.el7.centos.1.x86_64 providing redhat-lsb is already installed&quot; ]&#125;36.103.245.70 | SUCCESS =&gt; &#123; &quot;changed&quot;: false, &quot;msg&quot;: &quot;&quot;, &quot;rc&quot;: 0, &quot;results&quot;: [ &quot;redhat-lsb-4.1-27.el7.centos.1.x86_64 providing redhat-lsb is already installed&quot; ]&#125;36.103.245.135 | SUCCESS =&gt; &#123; &quot;changed&quot;: false, &quot;msg&quot;: &quot;&quot;, &quot;rc&quot;: 0, &quot;results&quot;: [ &quot;redhat-lsb-4.1-27.el7.centos.1.x86_64 providing redhat-lsb is already installed&quot; ] 步骤2：查看系统版本号123456789101112131415161718192021[root@Ansible ~]# ansible all -m command -a &quot;lsb_release -a&quot;36.103.245.138 | SUCCESS | rc=0 &gt;&gt;LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarchDistributor ID: CentOSDescription: CentOS Linux release 7.3.1611 (Core) Release: 7.3.1611Codename: Core36.103.245.70 | SUCCESS | rc=0 &gt;&gt;LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarchDistributor ID: CentOSDescription: CentOS Linux release 7.3.1611 (Core) Release: 7.3.1611Codename: Core36.103.245.135 | SUCCESS | rc=0 &gt;&gt;LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarchDistributor ID: CentOSDescription: CentOS Linux release 7.3.1611 (Core) Release: 7.3.1611Codename: Core 【示例2】为所有服务器安装ntp服务,并设置为开机启动步骤1：安装ntp服务12345678910111213141516171819202122232425[root@Ansible ~]# ansible all -s -m yum -a &quot;name=ntp state=present&quot;36.103.245.138 | SUCCESS =&gt; &#123; &quot;changed&quot;: false, &quot;msg&quot;: &quot;&quot;, &quot;rc&quot;: 0, &quot;results&quot;: [ &quot;ntp-4.2.6p5-28.el7.centos.x86_64 providing ntp is already installed&quot; ]&#125;36.103.245.70 | SUCCESS =&gt; &#123; &quot;changed&quot;: false, &quot;msg&quot;: &quot;&quot;, &quot;rc&quot;: 0, &quot;results&quot;: [ &quot;ntp-4.2.6p5-28.el7.centos.x86_64 providing ntp is already installed&quot; ]&#125;36.103.245.135 | SUCCESS =&gt; &#123; &quot;changed&quot;: false, &quot;msg&quot;: &quot;&quot;, &quot;rc&quot;: 0, &quot;results&quot;: [ &quot;ntp-4.2.6p5-28.el7.centos.x86_64 providing ntp is already installed&quot; ]&#125; 步骤2：启动ntp服务,并设置为开机启动12345678910111213141516171819202122232425262728[root@Ansible ~]# ansible all -m service -a &quot;name=ntpd state=started enabled=yes&quot;36.103.245.138 | SUCCESS =&gt; &#123; &quot;changed&quot;: false, &quot;enabled&quot;: true, &quot;name&quot;: &quot;ntpd&quot;, &quot;state&quot;: &quot;started&quot;, &quot;status&quot;: &#123; ...... &#125;&#125;36.103.245.70 | SUCCESS =&gt; &#123; &quot;changed&quot;: false, &quot;enabled&quot;: true, &quot;name&quot;: &quot;ntpd&quot;, &quot;state&quot;: &quot;started&quot;, &quot;status&quot;: &#123; ...... &#125;&#125;36.103.245.135 | SUCCESS =&gt; &#123; &quot;changed&quot;: false, &quot;enabled&quot;: true, &quot;name&quot;: &quot;ntpd&quot;, &quot;state&quot;: &quot;started&quot;, &quot;status&quot;: &#123; ...... &#125;&#125;","categories":[],"tags":[{"name":"Ansible","slug":"Ansible","permalink":"http://blog.wubolive.com/tags/Ansible/"}]},{"title":"Ansible常用模块收录册","slug":"ansible-mode","date":"2018-11-30T06:11:28.000Z","updated":"2018-11-30T06:17:06.611Z","comments":true,"path":"2018/11/30/ansible-mode/","link":"","permalink":"http://blog.wubolive.com/2018/11/30/ansible-mode/","excerpt":"","text":"Ansible常用模块，长期更新… yum模块yum：RedHat/CentOS包管理工具12345678910111213常用选项：– config_file：yum的配置文件 （optional） – disable_gpg_check：关闭gpg_check （optional） – disablerepo：不启用某个源 （optional） – enablerepo：启用某个源（optional） – name：要进行操作的软件包的名字，默认最新的程序包，指明要安装的程序包，可以带上版本号，也可以传递一个url或者一个本地的rpm包的路径 – state：状态（present，absent，latest），表示是安装还卸载 present:默认的，表示为安装 lastest: 安装为最新的版本 absent：表示删除 示例：[root@Ansible ~]# ansible all -m yum -a &apos;name=httpd state=latest&apos;","categories":[],"tags":[{"name":"Ansible","slug":"Ansible","permalink":"http://blog.wubolive.com/tags/Ansible/"}]},{"title":"Ansible安装与配置","slug":"ansible-install","date":"2018-11-30T06:10:28.000Z","updated":"2018-11-30T06:16:57.175Z","comments":true,"path":"2018/11/30/ansible-install/","link":"","permalink":"http://blog.wubolive.com/2018/11/30/ansible-install/","excerpt":"","text":"本文讲述如何安装Ansible环境，了解Ansible基本配置、运行测试 安装AnsibleCentOS 7系统安装Ansible(yum方式)1234#安装ansible yum源rpm -Uvh http://mirrors.zju.edu.cn/epel/7/x86_64/Packages/e/epel-release-7-11.noarch.rpm#yum安装ansibleyum -y install ansible 配置Ansible主配置文件常用配置12345678910111213141516171819[root@CentOS ~]# vim /etc/ansible/ansible.cfg[defaults]# 存放主机列表文件inventory = /etc/ansible/hosts# 指向Ansible模块目录library = /usr/share/my_modules/# 配置Ansible最大运行进程forks = 5# 设置默认执行命令的用户sudo_user = root# 配置管理节点的管理端口remote_port = 22# 配置是否检查SSH主机密钥host_key_checking = False# SSH超时时间timeout = 60# 指定存放Ansible日志的文件log_path = /var/log/ansible.log 业务环境 角色 主机名 IP地址 组名 控制主机 ansable 36.103.245.156 — 被管理节点 master 36.103.245.135 k8server 被管理节点 node1 36.103.245.138 k8server 被管理节点 node2 36.103.245.70 k8server 配置Linux主机ssh无密钥访问12345678910111213141516171819202122232425#生成密钥[root@Ansible ~]# ssh-keygen#将公钥分发到被管理节点[root@Ansible ~]# ssh-copy-id -i .ssh/id_rsa.pub root@36.103.245.135/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: &quot;.ssh/id_rsa.pub&quot;The authenticity of host &apos;36.103.245.135 (36.103.245.135)&apos; can&apos;t be established.ECDSA key fingerprint is SHA256:ZTtQLCTg21cYLQ5iJa5LkC51xN6lKGxVyLRAxjXPUOw.ECDSA key fingerprint is MD5:6d:5b:e9:d9:bd:12:64:06:c5:cc:a2:07:a6:99:96:3d.Are you sure you want to continue connecting (yes/no)? yes/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keysroot@36.103.245.135&apos;s password: Number of key(s) added: 1Now try logging into the machine, with: &quot;ssh &apos;root@36.103.245.135&apos;&quot;and check to make sure that only the key(s) you wanted were added.## 对node1及node2作相同的配置#测试是否免密登入[root@Ansible ~]# ssh 36.103.245.135Last failed login: Wed Sep 5 10:06:49 CST 2018 from 118.24.129.24 on ssh:nottyThere were 27 failed login attempts since the last successful login.Last login: Wed Sep 5 09:50:20 2018 from 36.103.245.156 Ansible 小测试首先可以查看一下ansible的软件版本信息1234567[root@Ansible ~]# ansible --versionansible 2.6.3 config file = /etc/ansible/ansible.cfg configured module search path = [u&apos;/usr/share/my_modules&apos;] ansible python module location = /usr/lib/python2.7/site-packages/ansible executable location = /usr/bin/ansible python version = 2.7.5 (default, Nov 6 2016, 00:28:07) [GCC 4.8.5 20150623 (Red Hat 4.8.5-11)] 主机连通性测试使用Ansible需要先定于主机与组的配置，默认文件在/etc/ansible/hosts12345678910111213141516[root@Ansible ~]# cat /etc/ansible/hosts# 定义主机#master.wubolive.com#node1.wubolive.com#node2.wubolive.com36.103.245.13536.103.245.13836.103.245.70# 定义组(组名需要用[]括起来)[k8server]#master.wubolive.com#node1.wubolive.com#node2.wubolive.com36.103.245.13536.103.245.13836.103.245.70 定义完成后使用ping模块对单主机进行ping操作12345[root@Ansible ~]# ansible 36.103.245.135 -m ping36.103.245.135 | SUCCESS =&gt; &#123; &quot;changed&quot;: false, &quot;ping&quot;: &quot;pong&quot;&#125; 对k8server组进行ping操作12345678910111213[root@Ansible ~]# ansible k8server -m ping 36.103.245.138 | SUCCESS =&gt; &#123; &quot;changed&quot;: false, &quot;ping&quot;: &quot;pong&quot;&#125;36.103.245.70 | SUCCESS =&gt; &#123; &quot;changed&quot;: false, &quot;ping&quot;: &quot;pong&quot;&#125;36.103.245.135 | SUCCESS =&gt; &#123; &quot;changed&quot;: false, &quot;ping&quot;: &quot;pong&quot;&#125; 在被管理节点批量执行命令在用户目录创建一个资源清单文件inventory.cfg12345[root@Ansible ~]# cat inventory.cfg [k8server]36.103.245.13536.103.245.13836.103.245.70 用ansible的shell模块对k8server组各服务器显示‘hello ansible！’123456789[root@Ansible ~]# ansible k8server -m shell -a &apos;/bin/echo hello ansible!&apos; -i inventory.cfg 36.103.245.70 | SUCCESS | rc=0 &gt;&gt;hello ansible!36.103.245.138 | SUCCESS | rc=0 &gt;&gt;hello ansible!36.103.245.135 | SUCCESS | rc=0 &gt;&gt;hello ansible! 用command模块也可以执行相同操作123456789[root@Ansible ~]# ansible k8server -m command -a &apos;/bin/echo hello ansible!&apos; -i inventory.cfg 36.103.245.138 | SUCCESS | rc=0 &gt;&gt;hello ansible!36.103.245.70 | SUCCESS | rc=0 &gt;&gt;hello ansible!36.103.245.135 | SUCCESS | rc=0 &gt;&gt;hello ansible! 获取帮助信息12345678910# 查看ansible命令帮助使用-h选项[root@Ansible ~]# ansible -h# 用ansible-doc列出ansible系统支持的模块[root@Ansible ~]# ansible-doc -l# 用ansible-doc加模块名称，可以显示该模块的描述和使用示例[root@Ansible ~]# ansible-doc yum# ansible-doc -s选项可以列出模块的动作[root@Ansible ~]# ansible-doc -s yum 另外，在Ansible调试脚本时，可以使用-v或者-vvv显示详细的输出结果123[root@Ansible ~]# ansible k8server -i inventory.cfg -m ping -v# 或[root@Ansible ~]# ansible k8server -i inventory.cfg -m ping -vvv","categories":[],"tags":[{"name":"Ansible","slug":"Ansible","permalink":"http://blog.wubolive.com/tags/Ansible/"}]},{"title":"","slug":"README.cn","date":"2018-11-29T09:38:47.094Z","updated":"2018-11-30T06:43:49.693Z","comments":true,"path":"2018/11/29/README.cn/","link":"","permalink":"http://blog.wubolive.com/2018/11/29/README.cn/","excerpt":"","text":"pureA brand new default theme for [Hexo]. Preview | English documentation | iconfont 特色 多语言 第三方评论框（友言、来必力、gitment、gitalk） 可展示个人豆瓣书单 可展示个人github托管项目 可设置支付宝、微信打赏 主题颜色 页面展示首页 | 归档 | 分类 | 标签 | 项目 | 书单 | 友链 | 关于 配置说明在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为站点配置文件， 后者称为主题配置文件 安装主题1git clone https://github.com/cofess/hexo-theme-pure.git themes/pure 更新主题12cd themes/puregit pull 启用pure主题打开站点配置文件，找到theme字段，将其值更改为 pure 1theme: pure 到此，主题安装完成。然后启动Hexo服务验证主题是否正确启用。 1hexo s 安装插件hexo-wordcount1npm install hexo-wordcount --save hexo-generator-json-content1npm install hexo-generator-json-content --save hexo-generator-feed1npm install hexo-generator-feed --save hexo-generator-sitemap1npm install hexo-generator-sitemap --save hexo-generator-baidu-sitemap1npm install hexo-generator-baidu-sitemap --save 主题配置设置语言打开站点配置文件, 将 language 设置成你所需要的语言。建议明确设置你所需要的语言,可选值对应themes\\pure\\languages目录下语言文件，简体中文配置如下： 1language: zh-CN 主题颜色定制了五套颜色，默认白，黑:theme-black，蓝:theme-blue，绿:theme-green，紫:theme-purple 123# configconfig: skin: # 主题颜色 theme-black theme-blue theme-green theme-purple 导航菜单12345678910111213141516171819202122# 导航菜单menu: Home: . Archives: archives # 归档 Categories: categories # 分类 Tags: tags # 标签 Repository: repository # github repositories Books: books # 书单 Links: links # 友链 About: about # 关于# 导航菜单图标（font awesome）menu_icons: enable: true # 是否启用菜单图标 home: icon-home-fill archives: icon-archives-fill categories: icon-folder tags: icon-tags repository: icon-project books: icon-book-fill links: icon-friendship about: icon-cup-fill 设置个人信息123头像在themes\\pure\\source\\images 目录下替换图片即可，捐献的二维码同理。个人信息大部分都在 主题配置文件 中设置 搜索主题内置三种站内搜索方式：insight、swiftype、baidu 12345# Searchsearch: insight: true # you need to install `hexo-generator-json-content` before using Insight Search swiftype: # enter swiftype install key here baidu: false # you need to disable other search engines to use Baidu search 分享支持weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin 123456# Share# weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedinshare: enable: true # 是否启用分享 sites: weibo,qq,wechat,facebook,twitter # PC端显示的分享图标 mobile_sites: weibo,qq,qzone # 移动端显示的分享图标 评论主题集成了disqus、友言、来必力、gitment、gitalk评论系统，选择其中一种即可 12345678910111213141516# Comment# Gitment# Introduction: https://imsun.net/posts/gitment-introduction/comment: type: livere # 启用哪种评论系统 disqus: # enter disqus shortname here youyan: uid: *** # enter youyan uid livere: uid: *** # enter livere uid gitment: githubID: username repo: username.github.io ClientID: *** ClientSecret: *** lazy: false 文章浏览量统计主题内置了不蒜子和leancloud来统计文章浏览量，启用其中之一即可，注意leancloud需要到其官网申请APP ID 和APP Key。 比如，启用不蒜子来统计文章浏览量，在主题配置文件中把busuanzi设置为true即可： 123pv: busuanzi: enable: true # 不蒜子统计 如果不需要第三方来统计浏览量，只需将相应设置改为false即可（设置为false后不会加载第三方JS脚本） Github respostory复制theme/pure/_source/ 目录下repository文件夹到blog path/source/ 目录下 123# Githubgithub: username: *** # github username 豆瓣书单复制theme/pure/_source/ 目录下books文件夹到blog path/source/ 目录下 12345# douban 豆瓣书单douban: user: *** # 豆瓣用户名 start: 0 # 从哪一条记录开始 count: 100 # 获取豆瓣书单数据条数 友情链接复制theme/pure/_source/ 目录下links文件夹到blog path/source/ 目录下 在 hexo 目录下的 source 文件夹内创建一个名为 _data（禁止改名）的文件夹。 然后在文件内创建一个名为 links.yml 的文件,在其中添加相关数据即可。 单个友情链接的格式为： 1234Name: link: http://example.com avatar: http://example.com/avatar.png desc: &quot;这是一个描述&quot; 添加多个友情链接，我们只需要根据上面的格式重复填写即可。 . 将 Name 改为友情链接的名字，例如 Cofess。 . http://example.com 为友情链接的地址。 . http://example.com/avatar.png 为友情链接的头像。 . 这是一个描述 为友情链接描述。 文章索引目录123456title: 文章标题categories: - 文章分类tags: - 文章标签toc: true # 是否启用内容索引 sidebar侧边栏文章侧边栏默认为开启状态，如果某篇文章不想开启侧边栏，在文章开头配置加入“sidebar: none”即可： 123456title: 文章标题categories: - 文章分类tags: - 文章标签sidebar: none # 是否启用sidebar侧边栏，none：不启用 博客优化hexo-neat auto Minify html、js、css and make it neat 1npm install hexo-neat --save 在博客配置文件_config.yml中添加 12345678910111213141516# hexo-neatneat_enable: trueneat_html: enable: true exclude: neat_css: enable: true exclude: - &apos;*.min.css&apos;neat_js: enable: true mangle: true output: compress: exclude: - &apos;*.min.js&apos; hexo-baidu-url-submit1npm install hexo-baidu-url-submit --save hexo-translate-title 使用Google翻译，百度翻译和有道翻译将Hexo中的汉字标题转成英文标题 安装 1npm install hexo-translate-title --save 在博客配置文件_config.yml中添加 123456translate_title: translate_way: google #google | baidu | youdao youdao_api_key: XXX youdao_keyfrom: XXX is_need_proxy: true #true | false proxy_url: http://localhost:8123 注意：判断是否需要配置google本地代理，因为我在本地是开启时才能访问google翻译的，如果没有被墙，请将_config.yml 下的is_need_proxy: true改为false。如果设置为true,请设置本地代理地址 数学公式 Hexo默认使用”hexo-renderer-marked”引擎渲染网页，该引擎会把一些特殊的markdown符号转换为相应的html标签 解决方案解决方案有很多，可以网上搜下，为了节省大家的时间，这里只提供亲身测试过的方法。 更换Hexo的markdown渲染引擎，hexo-renderer-markdown-it-plus引擎替换默认的渲染引擎hexo-renderer-marked即可。 安装hexo-renderer-markdown-it-plus插件12npm un hexo-renderer-marked --savenpm i hexo-renderer-markdown-it-plus --save 配置安装插件后，如果未正常渲染LaTeX数学公式，在博客配置文件_config.yml中添加 12345678910111213141516markdown_it_plus: highlight: true html: true xhtmlOut: true breaks: true langPrefix: linkify: true typographer: quotes: “”‘’ plugins: - plugin: name: markdown-it-katex enable: true - plugin: name: markdown-it-mark enable: false 文章启用mathjax12title: Hello Worldmathjax: true","categories":[],"tags":[]}]}